{"version":3,"sources":["components/Network/Network.js","components/RoomCard/RoomCard.js","App.js","serviceWorker.js","index.js"],"names":["Network","graph","filter","setSelected","renderer","style","width","height","settings","zoomMin","onClickNode","e","data","node","nodesBy","geocluster","attributes","pricecluster","price_cluster","occupancycluster","occupancy_cluster_string","dict","RoomCard","selected","Object","entries","d","className","src","img_url","alt","label","href","target","rel","map","key","Geocode","setApiKey","process","test","nodes","n","type","occupancy_cluster","join","priceClusterIntervals","cluster","min","max","occupancyClusterIntervals","min_acc_bath","max_acc_bath","min_acc_bed","max_acc_bed","App","listingsQT","quadtree","x","longitude","y","latitude","addAll","useState","setFilter","onSubmit","values","a","fromAddress","adderess","response","status","lngLat","results","geometry","location","lng","lat","nearest","find","console","log","render","handleSubmit","submitting","form","pristine","name","component","placeholder","disabled","price","pricePerDay","people","inputCluster","mapping","arr","closestTo","closest","Math","apply","i","length","Set","sort","b","deltas","clusters","cl","acc_bath","acc_bed","getClusterFromDeltas","accomodates","bathrooms","beds","onClick","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.17ff0a3e.chunk.js","sourcesContent":["import React from \"react\";\nimport { Sigma, NodeShapes, Filter } from \"react-sigma\";\nimport \"./Network.css\";\n\nconst Network = ({ graph, filter, setSelected }) => {\n  return (\n    <Sigma\n      renderer=\"canvas\"\n      style={{ width: \"100%\", height: \"100%\" }}\n      graph={graph}\n      settings={{ zoomMin: 0.00001 }}\n      onClickNode={e => {\n        setSelected(e.data.node);\n        //window.open(\"https://www.airbnb.com/rooms/\" + e.data.node.label);\n      }}\n    >\n      {/*<NodeShapes default=\"circle\" />*/}\n\n      <Filter\n        nodesBy={node => {\n          const geocluster =\n            filter && filter.geocluster\n              ? node.attributes.geocluster === filter.geocluster\n              : true;\n          const pricecluster =\n            filter && filter.pricecluster\n              ? node.attributes.price_cluster === filter.pricecluster\n              : true;\n\n          const occupancycluster =\n            filter && filter.occupancycluster\n              ? node.attributes.occupancy_cluster_string ===\n                filter.occupancycluster\n              : true;\n          return geocluster && pricecluster && occupancycluster;\n        }}\n      ></Filter>\n    </Sigma>\n  );\n};\n\nexport default Network;\n","import React from \"react\";\nimport \"./RoomCard.css\";\n\nconst dict = {\n  \"10\": 10,\n  \"11\": 9,\n  \"7\": 8,\n  \"8\": 7,\n  \"3\": 6,\n  \"6\": 5,\n  \"1\": 4,\n  \"2\": 3,\n  \"5\": 2,\n  \"13\": 1\n};\n\nconst RoomCard = ({ selected }) => {\n  const attributes = Object.entries(selected.attributes).filter(d => {\n    return (\n      d[0] !== \"file_url\" &&\n      d[0] !== \"file_original_name\" &&\n      d[0] !== \"img_url\" &&\n      d[0] !== \"occupancy_cluster\"\n    );\n  });\n  return (\n    <div className=\"roomCardContainer\">\n      <img src={selected.attributes.img_url} alt={selected.label}></img>\n      <table>\n        <tbody>\n          <tr>\n            <td>ID</td>\n            <td>\n              <a\n                href={`https://www.airbnb.com/rooms/${selected.label}`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {selected.label}\n              </a>\n            </td>\n          </tr>\n          {attributes.map(d => {\n            return (\n              <tr key={d[0]}>\n                <td>{d[0]}</td>\n                <td>\n                  {d[1]}\n                  {d[0] === \"modularity\" && <span> ({dict[d[1]]})</span>}\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default RoomCard;\n","import React, { useState } from \"react\";\nimport { quadtree } from \"d3-quadtree\";\nimport { Form, Field } from \"react-final-form\";\nimport Geocode from \"react-geocode\";\nimport Network from \"./components/Network\";\nimport RoomCard from \"./components/RoomCard\";\nimport \"./App.css\";\nimport graph from \"./networkMerged.json\";\n\nGeocode.setApiKey(process.env.REACT_APP_GOOGLE_MAP);\n\nconst test = graph;\n\ntest.nodes = test.nodes.map(n => {\n  delete n.type;\n  if (n.attributes.occupancy_cluster) {\n    n.attributes.occupancy_cluster_string = n.attributes.occupancy_cluster.join(\n      \"|\"\n    );\n  }\n\n  // delete n.color;\n  //n.image = 1.2;\n  // if (n.image) {\n  //   //n.image.clip = 1;\n  //   n.image.scale = 2.5;\n  //   n.image.w = 1000;\n  //   n.image.h = 600;\n  //   n.image.url = \"http://localhost:1337\" + n.attributes.file_url;\n  // }\n  return n;\n});\n//.slice(0, 10);\n\nconst priceClusterIntervals = [\n  { cluster: \"6\", min: 1.5, max: 7.7 },\n  { cluster: \"12\", max: 13.4, min: 8.8 },\n  { cluster: \"15\", max: 16.3, min: 13.4 },\n  { cluster: \"18\", max: 18.9, min: 16.4 },\n  { cluster: \"20\", max: 21.9, min: 19.0 },\n  { cluster: \"23\", max: 25.2, min: 22.0 },\n  { cluster: \"27\", max: 28.9, min: 25.2 },\n  { cluster: \"31\", max: 33.9, min: 29.0 },\n  { cluster: \"37\", max: 41.4, min: 34.0 },\n  { cluster: \"46\", max: 53.8, min: 41.5 },\n  { cluster: \"62\", max: 88.0, min: 54.0 },\n  { cluster: \"115\", max: 194.0, min: 89.0 },\n  { cluster: \"284\", max: 504.0, min: 202.7 }\n];\n\nconst occupancyClusterIntervals = [\n  {\n    cluster: \"0|0\",\n    min_acc_bath: -0.17,\n    max_acc_bath: 0.88,\n    min_acc_bed: -0.29,\n    max_acc_bed: 0.38\n  },\n  {\n    cluster: \"0|1\",\n    min_acc_bath: -0.79,\n    max_acc_bath: 0.67,\n    min_acc_bed: 0.58,\n    max_acc_bed: 3.33\n  },\n  {\n    cluster: \"0|5\",\n    min_acc_bath: -0.56,\n    max_acc_bath: 2.84,\n    min_acc_bed: 3.62,\n    max_acc_bed: 11.15\n  },\n  {\n    cluster: \"1|1\",\n    min_acc_bath: 0.33,\n    max_acc_bath: 2,\n    min_acc_bed: 0,\n    max_acc_bed: 1.96\n  },\n  {\n    cluster: \"2|\",\n    min_acc_bath: 0.67,\n    max_acc_bath: 8.33,\n    min_acc_bed: 0,\n    max_acc_bed: 3.08\n  },\n  {\n    cluster: \"3|4\",\n    min_acc_bath: 0.99,\n    max_acc_bath: 11.44,\n    min_acc_bed: 2.76,\n    max_acc_bed: 8.47\n  },\n  {\n    cluster: \"7|20\",\n    min_acc_bath: 0.33,\n    max_acc_bath: 59,\n    min_acc_bed: 11.15,\n    max_acc_bed: 35.33\n  },\n  {\n    cluster: \"-0.5|0\",\n    min_acc_bath: -0.91,\n    max_acc_bath: -0.36,\n    min_acc_bed: -0.29,\n    max_acc_bed: 0.04\n  },\n  {\n    cluster: \"-0.5|-0.5\",\n    min_acc_bath: -0.89,\n    max_acc_bath: -0.02,\n    min_acc_bed: 0.04,\n    max_acc_bed: 0.83\n  },\n  {\n    cluster: \"-1|-1\",\n    min_acc_bath: -1.5,\n    max_acc_bath: -0.63,\n    min_acc_bed: -1.42,\n    max_acc_bed: -0.42\n  }\n];\n\nfunction App() {\n  const listingsQT = quadtree()\n    .x(n => n.attributes.longitude)\n    .y(n => n.attributes.latitude)\n    .addAll(test.nodes);\n\n  // const [filtered, setFiltered] = useState(test);\n  // const [lngLat, setLngLat] = useState(null);\n  const [filter, setFilter] = useState(null);\n  // const [priceClusters, setPriceClusters] = useState(null);\n  const [selected, setSelected] = useState(null);\n\n  const onSubmit = async values => {\n    try {\n      const response = await Geocode.fromAddress(values.adderess);\n      if (response.status === \"OK\") {\n        const lngLat = [\n          response.results[0].geometry.location.lng,\n          response.results[0].geometry.location.lat\n        ];\n        const nearest = listingsQT.find(lngLat[0], lngLat[1]);\n        setFilter({ geocluster: nearest.attributes.geocluster });\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const closest = (arr, closestTo) => {\n    var closest = Math.max.apply(null, arr); //Get the highest number in arr in case it match nothing.\n    for (var i = 0; i < arr.length; i++) {\n      if (arr[i] >= closestTo && arr[i] < closest) closest = arr[i]; //Check if it's higher than your number, but lower than your closest value\n    }\n    return closest; // return the value\n  };\n\n  const getClusterFromPrice = (price, clusters) => {\n    const cl = clusters.find(d => {\n      return d.max > price;\n    });\n    return +cl.cluster;\n  };\n\n  const getClusterFromDeltas = (deltas, clusters) => {\n    const cl = clusters.find(d => {\n      return (\n        deltas.acc_bath >= d.min_acc_bath &&\n        deltas.acc_bath <= d.max_acc_bath &&\n        (deltas.acc_bed >= d.min_acc_bed && deltas.acc_bed <= d.max_acc_bed)\n      );\n    });\n    return cl ? cl.cluster : null; //che fare?\n  };\n\n  const onSubmitPrice = values => {\n    const pricePerDay = +values.price / +values.people / 30;\n\n    const inputCluster = getClusterFromPrice(\n      pricePerDay,\n      priceClusterIntervals\n    );\n\n    //get available clusters\n    const mapping = test.nodes\n      .filter(d => d.attributes.geocluster === filter.geocluster)\n      .map(d => d.attributes.price_cluster);\n\n    const availableClusters = [...new Set(mapping)].sort(function(a, b) {\n      return a - b;\n    });\n\n    const pricecluster = closest(availableClusters, inputCluster);\n    setFilter({ ...filter, pricecluster });\n  };\n\n  const computeDeltas = values => {\n    const ACCOMDATION = 4;\n    const BATHROOM = 1;\n    const BEDROOM = 2;\n\n    const acc_bath =\n      ((+values.accomodates / ACCOMDATION) *\n        (+values.accomodates - ACCOMDATION + 2)) /\n        (((+values.bathrooms + 1) / (BATHROOM + 1)) *\n          (+values.bathrooms - BATHROOM + 2)) -\n      1;\n\n    const acc_bed =\n      ((+values.accomodates / ACCOMDATION) *\n        (+values.accomodates - ACCOMDATION + 2)) /\n        (((+values.beds + 1) / (BEDROOM + 1)) * (+values.beds - BEDROOM + 3)) -\n      1;\n\n    const occupancycluster = getClusterFromDeltas(\n      { acc_bath, acc_bed },\n      occupancyClusterIntervals\n    );\n\n    //filtrare geo + price\n\n    //che fare anche se non c'è nel filtro\n    setFilter({ ...filter, occupancycluster });\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"networkContainer\">\n        <Network\n          graph={test}\n          filter={filter}\n          setSelected={setSelected}\n        ></Network>\n      </div>\n      <div className=\"inputContainer\">\n        <Form\n          onSubmit={onSubmit}\n          render={({ handleSubmit, form, submitting, pristine, values }) => (\n            <form onSubmit={handleSubmit}>\n              <div className=\"formContainer\">\n                <h6>\n                  geo\n                  {filter && filter.geocluster && (\n                    <span>\n                      : <span className=\"red\">{filter.geocluster}</span>\n                    </span>\n                  )}\n                </h6>\n                <p>\n                  <label>Address: </label>\n                  <Field\n                    name=\"adderess\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder=\"Write your address\"\n                  />\n                </p>\n                <button type=\"submit\" disabled={submitting || pristine}>\n                  Submit\n                </button>\n              </div>\n            </form>\n          )}\n        />\n\n        <Form\n          onSubmit={onSubmitPrice}\n          render={({ handleSubmit, form, submitting, pristine, values }) => (\n            <form onSubmit={handleSubmit}>\n              <div className=\"formContainer\">\n                <h6>\n                  price\n                  {filter && filter.pricecluster && (\n                    <span>\n                      : <span className=\"red\">{filter.pricecluster}</span>\n                    </span>\n                  )}\n                </h6>\n                <p>\n                  <label>Price per month: </label>\n                  <Field name=\"price\" component=\"input\" type=\"number\"></Field>\n                </p>\n\n                <p>\n                  <label>People: </label>\n                  <Field name=\"people\" component=\"input\" type=\"number\"></Field>\n                </p>\n\n                <button type=\"submit\" disabled={submitting || pristine}>\n                  Submit\n                </button>\n              </div>\n            </form>\n          )}\n        />\n\n        <Form\n          onSubmit={computeDeltas}\n          render={({ handleSubmit, form, submitting, pristine, values }) => (\n            <form onSubmit={handleSubmit}>\n              <div className=\"formContainer\">\n                <h6>\n                  occupancy\n                  {filter && filter.occupancycluster && (\n                    <span>\n                      : <span className=\"red\">{filter.occupancycluster}</span>\n                    </span>\n                  )}\n                </h6>\n                <p>\n                  <label>accomodates: </label>\n                  <Field\n                    name=\"accomodates\"\n                    component=\"input\"\n                    type=\"number\"\n                  ></Field>\n                </p>\n                <p>\n                  <label>beds: </label>\n                  <Field name=\"beds\" component=\"input\" type=\"number\"></Field>\n                </p>\n                <p>\n                  <label>bathrooms: </label>\n                  <Field\n                    name=\"bathrooms\"\n                    component=\"input\"\n                    type=\"number\"\n                  ></Field>\n                </p>\n                <button type=\"submit\" disabled={submitting || pristine}>\n                  Submit\n                </button>\n              </div>\n            </form>\n          )}\n        />\n        <div className=\"formContainer\">\n          <button\n            type=\"submit\"\n            onClick={() => {\n              setFilter(null);\n              setSelected(null);\n            }}\n          >\n            reset\n          </button>\n        </div>\n        {selected && <RoomCard selected={selected}></RoomCard>}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}